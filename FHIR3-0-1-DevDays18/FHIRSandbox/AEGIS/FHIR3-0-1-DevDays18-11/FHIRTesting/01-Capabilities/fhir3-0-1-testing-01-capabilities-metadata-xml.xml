<?xml version="1.0" encoding="UTF-8"?>
<TestScript xmlns="http://hl7.org/fhir">
	<id value="fhir3-0-1-testing-patient-01-capabilities-metadata-xml"/>
	<text>
		<status value="generated"/>
		<div xmlns="http://www.w3.org/1999/xhtml">
			<p>FHIR Dev Days 2018 - FHIR Testing Track - FHIR v3.0.1 Capability Metadata Suite XML</p>
		</div>
	</text>

	<url value="http://wildfhir.aegis.net/fhir3-0-1/TestScript/fhir3-0-1-testing-patient-01-capabilities-metadata-xml"/>
	<name value="fhir3-0-1-testing-patient-01-capabilities-metadata-xml"/>
	<status value="active"/>
	<date value="2018-11-01"/>
	<publisher value="AEGIS.net, Inc."/>
	<contact>
		<name value="Touchstone Support"/>
		<telecom>
			<system value="email"/>
			<value value="Touchstone_Support@aegis.net"/>
			<use value="work"/>
		</telecom>
	</contact>
	<description value="FHIR Dev Days 2018 - FHIR Testing Track - FHIR v3.0.1 - Capability Metadata test suite against a single server to verify support for the capabilities interaction 'HTTP GET metadata' and the return of a valid CapabilityStatement resource using XML format."/>
	<copyright value="(c) AEGIS.net, Inc. 2018"/>

	<profile id="capabilities-profile">
		<reference value="http://hl7.org/fhir/StructureDefinition/CapabilityStatement" />
	</profile>

	<test id="CapabilityMetadataXML">
		<name value="CapabilityMetadataXML"/>
		<description value="Test the HTTP GET metadata capabilities operation with HTTP Header Accept set to XML format and no request URL parameters defined. The expected response content is the found CapabilityStatement resource in XML format."/>

		<action>
			<operation>
				<type>
					<system value="http://touchstone.com/fhir/testscript-operation-codes-extended"/>
					<code value="metadata"/>
				</type>
				<description value="HTTP GET metadata capabilities operation with HTTP Header Accept set to XML format and no request URL parameters defined. The response asserts for all the optional HTTP Headers will be warning only."/>
				<accept value="xml"/>
				<contentType value="none"/>
				<params value="metadata"/>
			</operation>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP status is 200(OK)."/>
				<direction value="response"/>
				<responseCode value="200"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP Header Content-Type is present."/>
				<direction value="response"/>
				<headerField value="Content-Type"/>
				<operator value="notEmpty"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>
				<direction value="response"/>
				<headerField value="Content-Type"/>
				<operator value="contains"/>
				<value value="application/fhir+xml"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP Header Content-Type contains 'charset=utf-8'."/>
				<direction value="response"/>
				<headerField value="Content-Type"/>
				<operator value="contains"/>
				<value value="charset=utf-8"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned HTTP Header ETag is present. Warning only as FHIR servers SHOULD return this header."/>
				<direction value="response"/>
				<headerField value="ETag"/>
				<operator value="notEmpty"/>
				<warningOnly value="true" />
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned resource type is CapabilityStatement."/>
				<direction value="response"/>
				<resource value="CapabilityStatement"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned CapabilityStatement conforms to the base FHIR specification."/>
				<direction value="response"/>
				<validateProfileId value="capabilities-profile"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the returned CapabilityStatement resource minimally contains the declaration of a RESTful server."/>
				<direction value="response"/>
				<expression value="CapabilityStatement.rest.where(mode = 'server').exists()"/>
			</assert>
		</action>
	</test>
</TestScript>